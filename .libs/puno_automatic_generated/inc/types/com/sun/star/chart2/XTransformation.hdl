#ifndef INCLUDED_COM_SUN_STAR_CHART2_XTRANSFORMATION_HDL
#define INCLUDED_COM_SUN_STAR_CHART2_XTRANSFORMATION_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
#include "com/sun/star/uno/Reference.h"
#include "com/sun/star/uno/Sequence.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace chart2 {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XTransformation : public ::css::uno::XInterface
{
public:

    // Methods
    virtual ::css::uno::Sequence< double > SAL_CALL transform( const ::css::uno::Sequence< double >& aValues ) = 0;
    virtual ::sal_Int32 SAL_CALL getSourceDimension() = 0;
    virtual ::sal_Int32 SAL_CALL getTargetDimension() = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XTransformation() throw () {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::chart2::XTransformation const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::chart2::XTransformation > *);

#endif
