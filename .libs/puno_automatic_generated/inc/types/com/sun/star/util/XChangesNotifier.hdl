#ifndef INCLUDED_COM_SUN_STAR_UTIL_XCHANGESNOTIFIER_HDL
#define INCLUDED_COM_SUN_STAR_UTIL_XCHANGESNOTIFIER_HDL

#include "sal/config.h"

#include "com/sun/star/uno/XInterface.hdl"
namespace com { namespace sun { namespace star { namespace util { class XChangesListener; } } } }
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace util {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XChangesNotifier : public ::css::uno::XInterface
{
public:

    // Methods
    virtual void SAL_CALL addChangesListener( const ::css::uno::Reference< ::css::util::XChangesListener >& aListener ) = 0;
    virtual void SAL_CALL removeChangesListener( const ::css::uno::Reference< ::css::util::XChangesListener >& aListener ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XChangesNotifier() throw () {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::util::XChangesNotifier const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::util::XChangesNotifier > *);

#endif
