#ifndef INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATETRANSFORM_HDL
#define INCLUDED_COM_SUN_STAR_ANIMATIONS_XANIMATETRANSFORM_HDL

#include "sal/config.h"

#include "com/sun/star/animations/XAnimate.hdl"
#include "com/sun/star/uno/Reference.h"
#include "cppu/macros.hxx"
#include "sal/types.h"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace animations {

class SAL_NO_VTABLE SAL_DLLPUBLIC_RTTI XAnimateTransform : public ::css::animations::XAnimate
{
public:

    // Attributes
    virtual ::sal_Int16 SAL_CALL getTransformType() = 0;
    virtual void SAL_CALL setTransformType( ::sal_Int16 _transformtype ) = 0;

    static inline ::css::uno::Type const & SAL_CALL static_type(void * = 0);

protected:
    ~XAnimateTransform() throw () {} // avoid warnings about virtual members and non-virtual dtor
};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::animations::XAnimateTransform const *);
} } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::uno::Reference< ::css::animations::XAnimateTransform > *);

#endif
