#ifndef INCLUDED_COM_SUN_STAR_XML_SAX_SAXINVALIDCHARACTEREXCEPTION_HDL
#define INCLUDED_COM_SUN_STAR_XML_SAX_SAXINVALIDCHARACTEREXCEPTION_HDL

#include "sal/config.h"

#include "com/sun/star/xml/sax/SAXException.hdl"
#include "cppu/macros.hxx"

namespace com { namespace sun { namespace star { namespace uno { class Type; } } } }

namespace com { namespace sun { namespace star { namespace xml { namespace sax {

class CPPU_GCC_DLLPUBLIC_EXPORT SAXInvalidCharacterException : public ::css::xml::sax::SAXException
{
public:
    inline CPPU_GCC_DLLPRIVATE SAXInvalidCharacterException();

    inline CPPU_GCC_DLLPRIVATE SAXInvalidCharacterException(const ::rtl::OUString& Message_, const ::css::uno::Reference< ::css::uno::XInterface >& Context_, const ::css::uno::Any& WrappedException_);

#if !defined LIBO_INTERNAL_ONLY
    inline CPPU_GCC_DLLPRIVATE SAXInvalidCharacterException(SAXInvalidCharacterException const &);

    inline CPPU_GCC_DLLPRIVATE ~SAXInvalidCharacterException();

    inline CPPU_GCC_DLLPRIVATE SAXInvalidCharacterException & operator =(SAXInvalidCharacterException const &);
#endif

};


inline ::css::uno::Type const & cppu_detail_getUnoType(SAL_UNUSED_PARAMETER ::css::xml::sax::SAXInvalidCharacterException const *);
} } } } }

SAL_DEPRECATED("use cppu::UnoType") inline ::css::uno::Type const & SAL_CALL getCppuType(const ::css::xml::sax::SAXInvalidCharacterException *);

#endif
